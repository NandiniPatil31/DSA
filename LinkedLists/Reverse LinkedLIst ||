//Input: head = [1,2,3,4,5], left = 2, right = 4
//Output: [1,4,3,2,5]

//Sol 1

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode reverseBetween(ListNode head, int left, int right) {
        if(head == null)
            return null;

        ListNode temp = new ListNode(0);
        temp.next = head;
        ListNode pre = temp;
        for(int i = 0; i < left-1; i++){
            pre = pre.next;
        }

        ListNode start = pre.next;
        ListNode second = start.next;

        for(int i=0; i<right-left; i++){
            start.next = second.next;
            second.next = pre.next;
            pre.next = second;
            second = start.next;
        }
        return temp.next;
    }
}
