//Solution 1

class Solution {
    public int jump(int[] nums) {
        int jumps = 0, curEnd =0, curFar = 0;

        for(int i=0; i<nums.length-1; i++){
            curFar = Math.max(curFar, i + nums[i]);
            if(i==curEnd){
                jumps++;
                curEnd = curFar;
            }
        }
        return jumps;
    }
}

//Solution 2
class Solution {
    public int jump(int[] nums) {
        if(nums == null || nums.length < 2)
            return 0;
        
        int l = 0; 
        int r = nums[0];

        int diff = 1;

        while(l <= r){
            if(r >= nums.length - 1)
                return diff;
            
            int max = Integer.MIN_VALUE;
            for(; l <= r; l++)
                max = Math.max(max, l + nums[l]);

            if(max > r){
                l = r;
                r = max;
                diff++;
            }
        }
        return -1;
    }
}



