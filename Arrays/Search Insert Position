//Given a sorted array of distinct integers and a target value, return the index if the target is found. If not, return the index where it would be if it were inserted in order.
//Input: nums = [1,3,5,6], target = 5 Output: 2

//Sol 2:
class Solution {
    public int searchInsert(int[] nums, int target) {
        int left = 0;
        int right = nums.length - 1;

        while(left <= right){
            int mid = left + (right - left) / 2;

            if(nums[mid] == target)
                return mid;
            else if(nums[mid] < target)
                left = mid + 1;
            else
                right = mid - 1;
        }
        return left;
    }
}


//Sol 1:
class Solution {
    public int searchInsert(int[] nums, int target) {
        Map<Integer, Integer> map = new HashMap<>();

        for(int i = 0; i<nums.length; i++){
            map.put(nums[i], i);
        }

        if(map.containsKey(target))
            return map.get(target);

        int index = 0;
        for(int i : nums){
            if(i < target)
                index++;
            else
                break;
        }
        return index;
    }
}
