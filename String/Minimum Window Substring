// Input: s = "ADOBECODEBANC", t = "ABC"
//Output: "BANC"
// Explanation: The minimum window substring "BANC" includes 'A', 'B', and 'C' from string t.

//Sol 1:
class Solution {
    public String minWindow(String s, String t) {
        if(s == null || t == null || s.length() == 0 || t.length() == 0 || 
            s.length() < t.length())
            return new String();

        Map<Character, Integer> count = new HashMap<>();
        for(char c : t.toCharArray()){
            count.put(c, count.getOrDefault(c, 0) + 1);
        }

        Map<Character, Integer> window = new HashMap<>();
        int have = 0, need = count.size();
        int left = 0, minLen = Integer.MAX_VALUE;
        int minStart = 0;

        for(int right = 0; right < s.length(); right++){
            char c = s.charAt(right);
            window.put(c, window.getOrDefault(c, 0)+1);

            if(count.containsKey(c) && window.get(c).intValue() == count.get(c).intValue())
                have++;

            while(have == need){
                if(right - left + 1 < minLen){
                    minLen = right - left + 1;
                    minStart = left;
                }

                char leftChar = s.charAt(left);
                window.put(leftChar, window.get(leftChar) - 1);
                if(count.containsKey(leftChar) && window.get(leftChar).intValue() < count.get(leftChar).
                intValue())
                    have--;
                left++;
            }
        }
        return minLen == Integer.MAX_VALUE ? new String() : s.substring(minStart, minStart + minLen);

    }
}
